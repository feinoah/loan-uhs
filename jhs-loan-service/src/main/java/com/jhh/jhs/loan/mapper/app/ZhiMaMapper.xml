<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhh.jhs.loan.mapper.app.ZhiMaMapper" >
  <resultMap id="BaseResultMap" type="com.jhh.jhs.loan.entity.app.ZhiMa" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="per_id" property="perId" jdbcType="INTEGER" />
    <result column="zm_score" property="zmScore" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="creation_user" property="creationUser" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, per_id, zm_score, description, creation_user, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zhima
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zhima
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jhh.jhs.loan.entity.app.ZhiMa" >
    insert into zhima (id, per_id, zm_score,
      description, creation_user, creation_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{perId,jdbcType=INTEGER}, #{zmScore,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{creationUser,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jhh.jhs.loan.entity.app.ZhiMa" >
    insert into zhima
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="perId != null" >
        per_id,
      </if>
      <if test="zmScore != null" >
        zm_score,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="creationUser != null" >
        creation_user,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="perId != null" >
        #{perId,jdbcType=INTEGER},
      </if>
      <if test="zmScore != null" >
        #{zmScore,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creationUser != null" >
        #{creationUser,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhh.jhs.loan.entity.app.ZhiMa" >
    update zhima
    <set >
      <if test="perId != null" >
        per_id = #{perId,jdbcType=INTEGER},
      </if>
      <if test="zmScore != null" >
        zm_score = #{zmScore,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creationUser != null" >
        creation_user = #{creationUser,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhh.jhs.loan.entity.app.ZhiMa" >
    update zhima
    set per_id = #{perId,jdbcType=INTEGER},
      zm_score = #{zmScore,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      creation_user = #{creationUser,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPer_Id" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from zhima
    where per_id = #{per_id,jdbcType=INTEGER}
    ORDER BY id DESC  LIMIT 1
  </select>

</mapper>